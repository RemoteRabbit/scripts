#!/usr/bin/env bash

# Get the current branch name
current_branch=$(git rev-parse --abbrev-ref HEAD)

# Get the commit messages for the current branch
# This assumes you want all commits that are in this branch but not in main/master
base_branch="main"
if ! git show-ref --verify --quiet refs/heads/main; then
    base_branch="master"
fi

# Gets commit hash, author name, and commit messages
commit_messages=$(git log --format="%h - %an: %s" $base_branch..$current_branch)

# Check if there are any commits
if [ -z "$commit_messages" ]; then
    echo "No commits found on the current branch that are not in $base_branch."
    exit 0
fi

# Prepare the prompt for Cody
read -r -d '' prompt << EOM
Generate release notes based on the following commit messages:

$commit_messages

Please format the release notes in a clear, concise manner, following these guidelines:
1. Group similar changes together if applicable.
2. Include the commit hashes in your notes.
3. Do not include any introductory text at the beginning of your response.
4. Use bullet points or numbered lists for better readability.
5. Highlight significant changes or features.
6. Keep each line under 120 characters for better formatting.
EOM

# Use Cody to generate release notes
echo "Generating release notes with Cody..."
release_notes=$(cody chat "$prompt")

# Copy the release notes to clipboard
echo "$release_notes" | pbcopy

# Output confirmation
echo "Release notes have been generated and copied to your clipboard."
echo "You can now paste them into your desired application."

# Optionally, display the release notes in the terminal
echo ""
echo "Generated Release Notes:"
echo "========================"
echo "$release_notes"
